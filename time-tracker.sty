%% time-tracker.sty
%% -----------------------------------------------------------------------------
%% Version: 1.0
%% Author:  Florian Sihler, 29.08.2020
%%
%% This is a simple package which allows the definition of work times
%% in separate documents while collecting and adding the times.

%% All internal commands will be previxed by 'ttrack@'

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{time-tracker}[2020/08/29 EagleoutIce - A time-tracking package]

%% Options
%% -----------------------------------------------------------------------------

\newif\ifttrack@setup@packages@ \ttrack@setup@packages@true
\DeclareOption{packages}{\ttrack@setup@packages@true}
\DeclareOption{nopackages}{\ttrack@setup@packages@false}

\newif\ifttrack@use@tikz@
\DeclareOption{tikz}{\ttrack@use@tikz@true}
\DeclareOption{notikz}{\ttrack@use@tikz@false}

\ProcessOptions*

%% Packages
%% -----------------------------------------------------------------------------

\ifttrack@setup@packages@
\RequirePackage{pgfmath,pgffor,xcolor,enumitem}
\fi

%% Parser Implementation
%% -----------------------------------------------------------------------------

\newread\ttrack@file
\newcounter{ttrack@file@linec}

% #1 Short Name #2 Long Name
\newcommand*\RegisterUser[2]{%
\newcounter{ttrack@users@#1@attendance@time}%
\expandafter\gdef\csname ttrack@users@#1@fullname\endcsname{#2}%
\AtEndDocument{\StoreTime{#1}}
}

\newcommand*{\GetFullName}[1]{\@nameuse{ttrack@users@#1@fullname}}

% #1 FileName
\newcommand*\ParseFile[1]{%
    % init:
    \def\ttrack@cl{}%
    \immediate\openin\ttrack@file=#1\relax
    \ifeof\ttrack@file\else% exists
    \typeout{Parsing file '#1'}%
\loop
    \read\ttrack@file to \ttrack@cl \relax
    \unless\ifeof\ttrack@file
    \stepcounter{ttrack@file@linec}%
    % \typeout{In Line: \thettrack@file@linec (\ttrack@cl)}%
    \ignorespaces\ttrack@parse@line{\ttrack@cl}% ~\\
\repeat
    \fi
    \immediate\closein\ttrack@file% always close afterwards :D
}

\def\ttrack@parse@line#1{%
    \expandafter\ifx\expandafter!#1!\else% only if line is not empty:
        \expandafter\ifx#1\par\else% only if line is no paragraph
        \expandafter\ttrack@parse@@line#1\@nil
    \fi\fi
}

% Basic line evaluation. Does ist start with command init?
\def\ttrack@cmdinit@char{:}

% we cut the first character :D
\def\ttrack@parse@@line#1#2\@nil{%
    \def\tmp@a{#1}%
    \ifx\ttrack@cmdinit@char\tmp@a \relax% is command
        \ttrack@parse@@line@command#2\@nil
    \else\ttrack@parse@@line@event#1#2\@nil
    \fi}

% Parse the command to set the current Macors appropriatly :D

% The valid Macros:
\def\ttrack@register@user{}
\def\ttrack@register@team{}
\def\ttrack@register@topic{} % denotes current
\def\ttrack@register@tags{} % denotes current

% /<Key> <Value>
\def\ttrack@parse@@line@command/#1 #2;#3\@nil{%
    %\typeout{> Defining Register: '#1' with '#2' (roff: '#3')}%
    \@ifundefined{ttrack@register@#1}{%
        \PackageError{time-tracker}{(l.\thettrack@file@linec) The Register '#1' is invalid!}{Consider checking for typos or consulting me :D}%
    }{% valid
        \expandafter\gdef\csname ttrack@register@#1\endcsname{#2}%
    }%
}


% Note, that we will store/append the data in registers of the format:
% \user@topic; there will be no topic based ordering of events
% an event will be written


% Else We Parse and Expect a Valid Date Structure
\def\ttrack@month@to@name#1{%
    \ifcase#1\or{Jan}\or{Feb}\or{M\"{a}r}\or{Apr}\or{Mai}\or{Jun}%
    \or{Jul}\or{Aug}\or{Sep}\or{Okt}\or{Nov}\or{Dez}%
    \else\@ctrerr\fi
}


\newcounter{ttrack@zero@gobbler}
\def\ttrack@pad@zero#1{%
    \setcounter{ttrack@zero@gobbler}{#1}%
    \ifnum\value{ttrack@zero@gobbler}<1 \relax
        00%
    \else \ifnum\value{ttrack@zero@gobbler}<10 \relax
        0\arabic{ttrack@zero@gobbler}%
    \else\arabic{ttrack@zero@gobbler}\fi\fi
}

\def\ttrack@@date@convert#1-#2-#3\@nil{%
    \begingroup\parbox{3ex}{\hfill\ttrack@pad@zero{#3}}.\space{\ttrack@month@to@name{#2}}.\space{}\parbox{5ex}{#1}\endgroup
}

\def\ttrack@set@time#1#2{%
    \textit{\ttrack@pad@zero{#1}:\ttrack@pad@zero{#2}}%
}

\def\ttrack@date@convert#1%
{\expandafter\ifx\expandafter!#1!\else\expandafter\ttrack@@date@convert#1\@nil\fi}

\def\ttrack@parse@@line@event#1-#2-#3 von #4:#5 bis #6:#7: #8\@nil{%
    \@ifundefined{\ttrack@register@user @\ttrack@register@topic}{%
        % Init:%
        \expandafter\gdef\csname\ttrack@register@user @\ttrack@register@topic\endcsname{}%
        \typeout{Defined '\ttrack@register@user @\ttrack@register@topic'.}%
        % TODO: make a counter which increments and sort event based
        \newcounter{\ttrack@register@user @\ttrack@register@topic @count}%
    }{}%
    \stepcounter{\ttrack@register@user @\ttrack@register@topic @count}%
    \expandafter\xdef\csname\ttrack@register@user @\ttrack@register@topic @\@nameuse{the\ttrack@register@user @\ttrack@register@topic @count}\endcsname%
    {%
        \noexpand
        \item[\noexpand
            \parbox{13.25em}{%
                \noexpand\ttrack@date@convert{#1-#2-#3},\noexpand\hfill\noexpand\ttrack@set@time{#4}{#5}\space-\space\noexpand\ttrack@set@time{#6}{#7}%
            }\noexpand\thinspace:] %
        \noexpand
        \ttrack@output@tagsplit{%
            \@nameuse{\ttrack@register@user @\ttrack@register@topic @\@nameuse{the\ttrack@register@user @\ttrack@register@topic @count}@tags}%
        }%
        \unexpanded{#8}%
    }%
    \expandafter\xdef\csname\ttrack@register@user @\ttrack@register@topic @\@nameuse{the\ttrack@register@user @\ttrack@register@topic @count}@tags\endcsname{\ttrack@register@tags}%
    % calculate numbers :D
    % target-Counter: 'ttrack@users@\ttrack@register@user @attendance@time'
    % Check for daybreak:
    \def\@second@hour{#6}%
    \ifnum#6<#4%
        % In: First is night, second is after night, add to second for Addition
        \pgfmathsetmacro\@second@hour{#6+24}% 24 hour offset
    \fi%
    % calculate duration:
    \pgfmathsetmacro\@calc@time@duration{int(((\@second@hour*60)+#7) - ((#4*60)+#5))}%
    % Add to attendance time:
    \addtocounter{ttrack@users@\ttrack@register@user @attendance@time}{\@calc@time@duration}%
    % #4:#5,\@second@hour:#7 [\@calc@hi;\@calc@lo] Zeit fÃ¼r '\ttrack@register@user': '\@calc@time@duration'
}

\newcommand*\SetTagColor[1]{\gdef\ttrack@tag@color{#1}}
\SetTagColor{teal}

\newlength\ttrack@currentw

% Make this more flexible, declare Types ^^
% TODO: WORK WITHOUT TIKZ
\ifttrack@use@tikz@
\def\ttrack@output@tagsplit#1{%
    \foreach \tag in {#1}{%
        \settowidth{\ttrack@currentw}{\tag}%
        \ifdim\ttrack@currentw<1pt \else% only place if necessary
            \tikz[baseline=0.3ex]{\fill[\ttrack@tag@color,rounded corners=2.5pt] (0,0) rectangle ++(\ttrack@currentw+3.75pt,10pt) node[midway,centered] {\textcolor{white}{\scriptsize\sffamily\tag}};}\(\;\)%
        \fi
    }%
}
\else
\def\ttrack@output@tagsplit#1{%
    \foreach \tag in {#1}{%
        \settowidth{\ttrack@currentw}{\tag}%
        \ifdim\ttrack@currentw<1pt \else% only place if necessary
            \textcolor{\ttrack@tag@color}{\small\itshape\sffamily\tag}\(\;\)%
        \fi
    }%
}
\fi

% user: #1; topic: #2
\def\GetData#1#2{% only if person has done something for 'topic'
    \expandafter\ifnum\value{#1@#2@count}>0%
    \begin{description}[labelwidth=16em,leftmargin=!,align=right]%
    \foreach \i in {1,...,\@nameuse{the#1@#2@count}}{%
        \@nameuse{#1@#2@\i}%
    }%
    \end{description}%
    \fi
}

% #1 Persons, #2 Topic
\def\TypesetTopic#1#2{%
    \foreach \person in {#1}{%
        \@ifundefined{\person @#2}{}% no person
        {\expandafter\ifnum\value{\person @#2@count}<1 \else
            \paragraph{\GetFullName{\person}} \GetData{\person}{#2}%
        \fi
        }
    }
}

% #1 short
\newcommand*\StoreTime[1]{
    \edef\@time{\arabic{ttrack@users@#1@attendance@time}}
    \immediate\write\@auxout{\noexpand\expandafter\noexpand\gdef\noexpand\csname the#1attendance\noexpand\endcsname{\@time}}
}

% #1 short
\newcommand*\GetTime[1]{%
    \@ifundefined{the#1attendance}{0}{\@nameuse{the#1attendance}}%
}

\newcounter{ttrack@calc@tmp@a}
\newcommand*\MinutesToHours[1]{%
    \setcounter{ttrack@calc@tmp@a}{\numexpr#1/60\relax}%
    \pgfmathsetmacro\hourattendance{int(floor(\thettrack@calc@tmp@a))}%
    \hourattendance
}

\endinput
% TODO: Change von bis zu 'from' 'to' (also variabel machen)